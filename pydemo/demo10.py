#在安装pygame模块的时候尤其要注意一下：
#如果在pycharm中，安装不成功
#可以换种思路：1、确保在系统层面的python环境里面，已经安装了pygame[pip install pygame]一般可以安装成功
#2、可以将安装好的pygame模块的文件夹拷贝到pycharm所创建项目中的venv虚拟环境里面【....\venv\Lib\site-packages】

import time
print(time.ctime())

#import 到首次导入模块的时候，3步操作
#1、打开模块文件
#2、执行模块对应的文件，将执行过程中产生的名字都放到模块的名称空间
#3、在程序中会有一个模块的名称指向模块的名称空间去

from time import ctime,time   #部分导入
print(ctime())

#from ..... import   首次导入发生了3个步骤
#1、以模块为准创造了一个模块的名称空间
#2、执行模块对应的文件，将执行过程中产生的名字都放到模块的名称空间
#3、在当前执行文件的名称空间中拿到一个名字，该名字直接指向模块中的某一个名字，意味着可以不加任何的前缀进行使用

#优点：不用加前缀，代码更加简洁了
#缺点：容易与当前执行文件中名称空间中的名字冲突

#相同点：都会执行模块对应的文件，并且都会产生模块的名称空间；在调用功能时，都需要转到定义时寻找作用域关系
#不同点：impport 需要加前缀；from.....import 不需要加前缀

#OS的导入模块
import os

#模块的定义：
#在Python当中，一个.py文件就是一个模块
#作用：可以使我们有逻辑的去组织python代码，以库的形式去封装功能，非常方便的去让调用者去使用
#可以定义函数 类 变量，也能包含可执行的代码
#注意：不同的模块可以定义相同的变量名，但是每个模块中的变量名作用域只是在本模块中

# 模块的分类：
# 内置模块   自定义模块     第三方模块

#gc垃圾回收
import sys
a=[]
print(sys.getrefcount(a)) #被引用两次
b=a
print(sys.getrefcount(a)) #被引用三次
